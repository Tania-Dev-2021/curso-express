openapi: 3.0.3
info:
  title: Documentação  API de Gerenciamento de usuarios
  description: |-
    A API de Gerenciamento de Pessoas é uma interface de programação de aplicativos 
    RESTful projetada para gerenciar informações de indivíduos em um sistema. 
    Ela fornece um conjunto completo de operações CRUD (Criar, Ler, Atualizar e Deletar) 
    que permitem interagir com os dados de pessoas de maneira eficiente e segura. 
    A API é construída utilizando práticas modernas de desenvolvimento web, garantindo 
    escalabilidade, segurança e facilidade de manutenção.
  version: 1.0.0
license:
    name: MIT
    url: https://opensource.org/license/mit
servers:
  - name: Localhost
  - url: http://localhost:8080
tags:
  - name: Usuarios
    description: API de gerenciamento de usuarios
paths:
  /api/usuario:
    get:
      tags:
        - Usuarios
      summary: Listar todos os usuarios
      responses:
        '200':
          description: Listar todos os usuarios no banco de dados
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '500':
          description: Erro ao listar usuarios
    post:
      tags:
        - Usuarios
      summary: Cadastrar um usuario
      description: Adicionar um novo usuario ao banco
      requestBody:
        required: true
        content: 
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioInput'
      responses:
        '201':
          description: Usuario criado com sucesso!
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Usuario'
        '500':
          description: Erro ao cadastrar usuario!
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: Fulano
        email:
          type: string
          example: fulano@email.com
        telefone:
          type: string
          example: 84999999999
        cpf:
          type: string
          example: 123.456.789-12
        endereco:
          type: string
          example: rua tal, de tal, 123
        data_cadastro:
          type: string
          format: date-time
          example: 1990-12-31T23:59:60 
        data_nascimento:
          type: string
          format: date
          example: 1990-12-31 
        senha:
          type: string
          example: senha123
        status:
          type: string
          enum:
            - ativo
            - inativo
          example: ativo  
    UsuarioInput:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "Fulano"
        email:
          type: string
          example: "fulano@email.com"
        telefone:
          type: string
          example: "84999999999"
        cpf:
          type: string
          example: "123.456.789-12"
        endereco:
          type: string
          example: "rua tal, de tal, 123"
        data_cadastro:
          type: string
          format: date-time
          example: "1990-12-31T23:59:60 "
        data_nascimento:
          type: string
          format: date
          example: "1990-12-31 "
        senha:
          type: string
          example: "senha123"
        status:
          type: string
          enum:
            - ativo
            - inativo
          example: "ativo"